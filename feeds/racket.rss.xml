<?xml version="1.0" encoding="utf-8"?> 
<rss version="2.0">
 <channel>
  <title>QuasarBright Blog: Posts tagged 'racket'</title>
  <description>QuasarBright Blog: Posts tagged 'racket'</description>
  <link>http://www.example.com/frog-test/tags/racket.html</link>
  <lastBuildDate>Fri, 25 Nov 2022 13:26:14 UT</lastBuildDate>
  <pubDate>Fri, 25 Nov 2022 13:26:14 UT</pubDate>
  <ttl>1800</ttl>
  <item>
   <title>Matching Regular Expressions by Computing Their Derivatives</title>
   <link>http://www.example.com/frog-test/2022/11/matching-regular-expressions-by-computing-their-derivatives.html?utm_source=racket&amp;utm_medium=RSS</link>
   <guid isPermaLink="false">urn:http-www-example-com:-frog-test-2022-11-matching-regular-expressions-by-computing-their-derivatives-html</guid>
   <pubDate>Fri, 25 Nov 2022 13:26:14 UT</pubDate>
   <author>Mike Delmonaco</author>
   <description>
&lt;p&gt;Regular expressions allow us to describe patterns in text. They are very useful and show up all over the place in programming,
but matching regular expressions can be difficult. One well-known technique for matching regular expressions is converting the regular
expression to a finite state machine. This is pretty elegant, but can get complicated and messy.&lt;/p&gt;

&lt;p&gt;An alternative technique, which is the subject of this blog post, involves something called a Brzozowski derivative. This technique can be
used to compute the derivative of a generalized regular expression.&lt;/p&gt;&lt;a href="http://www.example.com/frog-test/2022/11/matching-regular-expressions-by-computing-their-derivatives.html?utm_source=racket&amp;amp;utm_medium=RSS"&gt;&lt;em&gt;More&amp;hellip;&lt;/em&gt;&lt;/a&gt;</description></item></channel></rss>