((3) 0 () 1 ((p+ #"/home/runner/work/frog-test/frog-test/repo/_src/posts/2022-11-25-regexp-derivative.scrbl" . unix)) () (h ! (equal) ((? . 0) f post (u . "Matching Regular Expressions by Computing Their Derivatives") (? . 0) 1669409412 (p+ #"/home/runner/work/frog-test/frog-test/repo/2022/11/matching-regular-expressions-by-computing-their-derivatives.html" . unix) (u . "/frog-test/2022/11/matching-regular-expressions-by-computing-their-derivatives.html") (u . "2022-11-25T13:26:14") #f #f (c (u . "racket")) (u . "\n<p>Regular expressions allow us to describe patterns in text. They are very useful and show up all over the place in programming,\nbut matching regular expressions can be difficult. One well-known technique for matching regular expressions is converting the regular\nexpression to a finite state machine. This is pretty elegant, but can get complicated and messy.</p>\n\n<p>An alternative technique, which is the subject of this blog post, involves something called a Brzozowski derivative. This technique can be\nused to compute the derivative of a generalized regular expression.</p>") #t (u . "\n<p>Regular expressions allow us to describe patterns in text. They are very useful and show up all over the place in programming,\nbut matching regular expressions can be difficult. One well-known technique for matching regular expressions is converting the regular\nexpression to a finite state machine. This is pretty elegant, but can get complicated and messy.</p>\n\n<p>An alternative technique, which is the subject of this blog post, involves something called a Brzozowski derivative. This technique can be\nused to compute the derivative of a generalized regular expression.</p>\n<!--more-->\n\n<h1>1\n <tt>&nbsp;</tt><a name=\"(part._.The_.Derivative_of_a_.Regular_.Expression_)\"></a>The Derivative of a Regular Expression?</h1>\n\n<p></p>\n\n<div class=\"SIntrapara\">The derivative of a regular expression <span class=\"RktSym\">re</span> with respect to a character (or string) <span class=\"RktSym\">c</span> is another regular expression which matches strings that,\nwhen appended to <span class=\"RktSym\">c</span>, are matches of <span class=\"RktSym\">re</span>. Here are a few examples:\n</div>\n\n<div class=\"SIntrapara\">\n <ul>\n  <li>\n   <p>The derivative of <span class=\"RktVal\">#rx\"abc\"</span> with respect to <span class=\"RktVal\">#\\a</span> is <span class=\"RktVal\">#rx\"bc\"</span></p></li>\n  <li>\n   <p>The derivative of <span class=\"RktVal\">#rx\"(ab)|(xy)\"</span> with respect to <span class=\"RktVal\">#\\a</span> is <span class=\"RktVal\">#rx\"b\"</span>. The second alternative is eliminated</p></li>\n  <li>\n   <p>The derivative of <span class=\"RktVal\">#rx\"(abc)*\"</span> with respect to <span class=\"RktVal\">#\\a</span> is <span class=\"RktVal\">#rx\"bc(abc)*\"</span></p></li>\n  <li>\n   <p>The derivative of <span class=\"RktVal\">#rx\"b\"</span> with respect to <span class=\"RktVal\">#\\a</span> is a regular expression that has no matches ever.</p></li></ul></div>\n\n<p>We take the derivative of a regular expression with respect to a string by repeatedly taking the derivative of the regular expression with respect to each character.</p>\n\n<p>That&rsquo;s the idea. If the derivative of the regular expression with respect to the target string is a regular expression which matches the empty string, we have a match.</p>\n\n<p>We will represent regular expressions with racket datums:</p>\n\n<p></p>\n\n<table cellpadding=\"0\" cellspacing=\"0\">\n <tbody>\n  <tr>\n   <td align=\"right\" valign=\"baseline\"><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktVar\">rx</span></td>\n   <td align=\"left\" valign=\"baseline\"><span class=\"stt\">&nbsp;</span></td>\n   <td align=\"center\" valign=\"baseline\">=</td>\n   <td align=\"left\" valign=\"baseline\"><span class=\"stt\">&nbsp;</span></td>\n   <td align=\"left\" valign=\"baseline\"><span class=\"RktSym\">character</span></td></tr>\n  <tr>\n   <td align=\"right\" valign=\"baseline\"><span class=\"stt\">&nbsp;</span></td>\n   <td align=\"left\" valign=\"baseline\"><span class=\"stt\">&nbsp;</span></td>\n   <td align=\"center\" valign=\"baseline\">|</td>\n   <td align=\"left\" valign=\"baseline\"><span class=\"stt\">&nbsp;</span></td>\n   <td align=\"left\" valign=\"baseline\"><span class=\"RktVal\">'</span><span class=\"RktVal\">empty</span></td></tr>\n  <tr>\n   <td align=\"right\" valign=\"baseline\"><span class=\"stt\">&nbsp;</span></td>\n   <td align=\"left\" valign=\"baseline\"><span class=\"stt\">&nbsp;</span></td>\n   <td align=\"center\" valign=\"baseline\">|</td>\n   <td align=\"left\" valign=\"baseline\"><span class=\"stt\">&nbsp;</span></td>\n   <td align=\"left\" valign=\"baseline\"><span class=\"RktVal\">'</span><span class=\"RktVal\">null</span></td></tr>\n  <tr>\n   <td align=\"right\" valign=\"baseline\"><span class=\"stt\">&nbsp;</span></td>\n   <td align=\"left\" valign=\"baseline\"><span class=\"stt\">&nbsp;</span></td>\n   <td align=\"center\" valign=\"baseline\">|</td>\n   <td align=\"left\" valign=\"baseline\"><span class=\"stt\">&nbsp;</span></td>\n   <td align=\"left\" valign=\"baseline\"><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktValLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/pairs.html#%28def._%28%28quote._~23~25kernel%29._list%29%29\">list</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">or</span><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktVar\">rx</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVar\">rx</span><span class=\"RktPn\">)</span></td></tr>\n  <tr>\n   <td align=\"right\" valign=\"baseline\"><span class=\"stt\">&nbsp;</span></td>\n   <td align=\"left\" valign=\"baseline\"><span class=\"stt\">&nbsp;</span></td>\n   <td align=\"center\" valign=\"baseline\">|</td>\n   <td align=\"left\" valign=\"baseline\"><span class=\"stt\">&nbsp;</span></td>\n   <td align=\"left\" valign=\"baseline\"><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktValLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/pairs.html#%28def._%28%28quote._~23~25kernel%29._list%29%29\">list</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">and</span><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktVar\">rx</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVar\">rx</span><span class=\"RktPn\">)</span></td></tr>\n  <tr>\n   <td align=\"right\" valign=\"baseline\"><span class=\"stt\">&nbsp;</span></td>\n   <td align=\"left\" valign=\"baseline\"><span class=\"stt\">&nbsp;</span></td>\n   <td align=\"center\" valign=\"baseline\">|</td>\n   <td align=\"left\" valign=\"baseline\"><span class=\"stt\">&nbsp;</span></td>\n   <td align=\"left\" valign=\"baseline\"><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktValLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/pairs.html#%28def._%28%28quote._~23~25kernel%29._list%29%29\">list</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">not</span><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktVar\">rx</span><span class=\"RktPn\">)</span></td></tr>\n  <tr>\n   <td align=\"right\" valign=\"baseline\"><span class=\"stt\">&nbsp;</span></td>\n   <td align=\"left\" valign=\"baseline\"><span class=\"stt\">&nbsp;</span></td>\n   <td align=\"center\" valign=\"baseline\">|</td>\n   <td align=\"left\" valign=\"baseline\"><span class=\"stt\">&nbsp;</span></td>\n   <td align=\"left\" valign=\"baseline\"><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktValLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/pairs.html#%28def._%28%28quote._~23~25kernel%29._list%29%29\">list</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktVar\">rx</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVar\">rx</span><span class=\"RktPn\">)</span></td></tr>\n  <tr>\n   <td align=\"right\" valign=\"baseline\"><span class=\"stt\">&nbsp;</span></td>\n   <td align=\"left\" valign=\"baseline\"><span class=\"stt\">&nbsp;</span></td>\n   <td align=\"center\" valign=\"baseline\">|</td>\n   <td align=\"left\" valign=\"baseline\"><span class=\"stt\">&nbsp;</span></td>\n   <td align=\"left\" valign=\"baseline\"><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktValLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/pairs.html#%28def._%28%28quote._~23~25kernel%29._list%29%29\">list</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktVar\">rx</span><span class=\"RktPn\">)</span></td></tr></tbody></table>\n\n<ul>\n <li>\n  <p><span class=\"RktSym\">character</span> matches the character <span class=\"RktSym\">character</span></p></li>\n <li>\n  <p><span class=\"RktVal\">'</span><span class=\"RktVal\">empty</span> matches the empty string</p></li>\n <li>\n  <p><span class=\"RktVal\">'</span><span class=\"RktVal\">null</span> doesn&rsquo;t match any strings</p></li>\n <li>\n  <p><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktValLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/pairs.html#%28def._%28%28quote._~23~25kernel%29._list%29%29\">list</a></span><span class=\"stt\"> </span><span class=\"RktVal\">'</span><span class=\"RktVal\">or</span><span class=\"stt\"> </span><span class=\"RktSym\">a</span><span class=\"stt\"> </span><span class=\"RktSym\">b</span><span class=\"RktPn\">)</span> matches strings that match <span class=\"RktSym\">a</span> or <span class=\"RktSym\">b</span></p></li>\n <li>\n  <p><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktValLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/pairs.html#%28def._%28%28quote._~23~25kernel%29._list%29%29\">list</a></span><span class=\"stt\"> </span><span class=\"RktVal\">'</span><span class=\"RktVal\">and</span><span class=\"stt\"> </span><span class=\"RktSym\">a</span><span class=\"stt\"> </span><span class=\"RktSym\">b</span><span class=\"RktPn\">)</span> matches strings that match <span class=\"RktSym\">a</span> and <span class=\"RktSym\">b</span>. This is a feature that most regular expression implementations do not support.</p></li>\n <li>\n  <p><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktValLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/pairs.html#%28def._%28%28quote._~23~25kernel%29._list%29%29\">list</a></span><span class=\"stt\"> </span><span class=\"RktVal\">'</span><span class=\"RktVal\">not</span><span class=\"stt\"> </span><span class=\"RktSym\">a</span><span class=\"RktPn\">)</span> matches strings that do not match <span class=\"RktSym\">a</span>. This is a feature that most regular expression implementations do not support.</p></li>\n <li>\n  <p><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktValLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/pairs.html#%28def._%28%28quote._~23~25kernel%29._list%29%29\">list</a></span><span class=\"stt\"> </span><span class=\"RktVal\">'</span><span class=\"RktVal\">seq</span><span class=\"stt\"> </span><span class=\"RktSym\">a</span><span class=\"stt\"> </span><span class=\"RktSym\">b</span><span class=\"RktPn\">)</span> matches strings that can be partitioned into a substring that matches <span class=\"RktSym\">a</span> followed by a substring that matches <span class=\"RktSym\">b</span>.\nThis is the concatenation of two regular expressions.</p></li>\n <li>\n  <p><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktValLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/pairs.html#%28def._%28%28quote._~23~25kernel%29._list%29%29\">list</a></span><span class=\"stt\"> </span><span class=\"RktVal\">'</span><span class=\"RktVal\">*</span><span class=\"stt\"> </span><span class=\"RktSym\">a</span><span class=\"RktPn\">)</span> matches strings that match zero or more concatenations of <span class=\"RktSym\">a</span> with itself</p></li></ul>\n\n<p>First, we must define a helper function that determines whether a regular expression matches the empty string. If it does, we return <span class=\"RktVal\">'</span><span class=\"RktVal\">empty</span>. Otherwise, we return <span class=\"RktVal\">'</span><span class=\"RktVal\">null</span>.</p>\n\n<div class=\"SCodeFlow\">\n <table cellpadding=\"0\" cellspacing=\"0\" class=\"RktBlk\">\n  <tbody>\n   <tr>\n    <td>\n     <table cellpadding=\"0\" cellspacing=\"0\" class=\"RktBlk\">\n      <tbody>\n       <tr>\n        <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktStxLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/define.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._define%29%29\">define</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">v</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">re</span><span class=\"RktPn\">)</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktStxLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/match.html#%28form._%28%28lib._racket%2Fmatch..rkt%29._match%29%29\">match</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">re</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">'</span><span class=\"RktVal\">null</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">null</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">'</span><span class=\"RktVal\">empty</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">empty</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktPn\">(</span><span class=\"RktSym\">?</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\"><a class=\"RktValLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/characters.html#%28def._%28%28quote._~23~25kernel%29._char~3f%29%29\">char?</a></span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">null</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">a</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">empty</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktRdr\">,</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktStxLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/if.html#%28form._%28%28lib._racket%2Fprivate%2Fletstx-scheme..rkt%29._or%29%29\">or</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">and</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">seq</span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktStxLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/if.html#%28form._%28%28quote._~23~25kernel%29._if%29%29\">if</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktValLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/Equality.html#%28def._%28%28quote._~23~25kernel%29._equal~3f%29%29\">equal?</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">v</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">a</span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">null</span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">null</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">v</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">b</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">or</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktStxLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/if.html#%28form._%28%28quote._~23~25kernel%29._if%29%29\">if</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktValLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/Equality.html#%28def._%28%28quote._~23~25kernel%29._equal~3f%29%29\">equal?</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">v</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">a</span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">empty</span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">empty</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">v</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">b</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">not</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">a</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktStxLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/if.html#%28form._%28%28quote._~23~25kernel%29._if%29%29\">if</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktValLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/Equality.html#%28def._%28%28quote._~23~25kernel%29._equal~3f%29%29\">equal?</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">v</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">a</span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">null</span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">empty</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">null</span><span class=\"RktPn\">)</span><span class=\"RktPn\">]</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr></tbody></table></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">v</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">empty</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'empty</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">v</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">null</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'null</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">v</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'null</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">v</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">and</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">empty</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"RktVal\">)</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'null</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">v</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">or</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">empty</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"RktVal\">)</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'empty</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">v</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"RktVal\">)</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'empty</span></p></td></tr></tbody></table></div>\n\n<p>Now, we&rsquo;re ready to implement the derivative:</p>\n\n<div class=\"SCodeFlow\">\n <table cellpadding=\"0\" cellspacing=\"0\" class=\"RktBlk\">\n  <tbody>\n   <tr>\n    <td>\n     <table cellpadding=\"0\" cellspacing=\"0\" class=\"RktBlk\">\n      <tbody>\n       <tr>\n        <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktStxLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/define.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._define%29%29\">define</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">re</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">c</span><span class=\"RktPn\">)</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktStxLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/match.html#%28form._%28%28lib._racket%2Fmatch..rkt%29._match%29%29\">match</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">re</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktPn\">(</span><span class=\"RktSym\">?</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\"><a class=\"RktValLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/characters.html#%28def._%28%28quote._~23~25kernel%29._char~3f%29%29\">char?</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">c^</span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktStxLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/if.html#%28form._%28%28quote._~23~25kernel%29._if%29%29\">if</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktValLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/Equality.html#%28def._%28%28quote._~23~25kernel%29._eq~3f%29%29\">eq?</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">c</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">c^</span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">empty</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">null</span><span class=\"RktPn\">)</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktStxLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/if.html#%28form._%28%28lib._racket%2Fprivate%2Fletstx-scheme..rkt%29._or%29%29\">or</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">empty</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">null</span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">null</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">a</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">c</span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">a</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">b</span><span class=\"RktVal\">)</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">or</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">c</span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">b</span><span class=\"RktVal\">)</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktPn\">(</span><span class=\"RktSym\">v</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">a</span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">b</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">c</span><span class=\"RktPn\">)</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">and</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">b</span><span class=\"RktVal\">)</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">and</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">c</span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">b</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">c</span><span class=\"RktPn\">)</span><span class=\"RktVal\">)</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">or</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">b</span><span class=\"RktVal\">)</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">or</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">c</span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">b</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">c</span><span class=\"RktPn\">)</span><span class=\"RktVal\">)</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">not</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">a</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">not</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">c</span><span class=\"RktPn\">)</span><span class=\"RktVal\">)</span><span class=\"RktPn\">]</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr></tbody></table></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'empty</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'null</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'(or (seq empty #\\b) (seq null null))</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\z</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'(or (seq null #\\b) (seq null null))</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">or</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\c</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'(or (or (seq empty #\\b) (seq null null)) (or (seq empty #\\c) (seq null null)))</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">or</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\c</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\z</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'(or (or (seq null #\\b) (seq null null)) (or (seq null #\\c) (seq null null)))</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">and</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\c</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <table cellpadding=\"0\" cellspacing=\"0\">\n      <tbody>\n       <tr>\n        <td>\n         <p><span class=\"RktRes\">'(and (or (seq empty #\\b) (seq null null))</span></p></td></tr>\n       <tr>\n        <td>\n         <p><span class=\"RktRes\"></span><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktRes\"></span><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktRes\"></span><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktRes\">(or (seq empty #\\c) (seq null null)))</span></p></td></tr></tbody></table></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">and</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\c</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\z</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'(and (or (seq null #\\b) (seq null null)) (or (seq null #\\c) (seq null null)))</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'(seq empty (* #\\a))</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'(seq (or (seq empty #\\b) (seq null null)) (* (seq #\\a #\\b)))</span></p></td></tr></tbody></table></div>\n\n<p>For the character case, we check if the target character matches the regular expression character. If it does, then the only thing that can follow the target character in a string\nis the empty string, so that&rsquo;s the derivative. If it doesn&rsquo;t, there are no strings that can follow the character, so we return null. Remember, the result of a derivative is a regular expression\nthat matches strings that, when appended after the target character, match the original regular expression. If the derivative is <span class=\"RktVal\">'</span><span class=\"RktVal\">null</span>, then the match failed because there are\nno strings that can follow the character and produce a match. In other words, the target character is not the first character of any matches of the regular expression.</p>\n\n<p>For the <span class=\"RktVal\">'</span><span class=\"RktVal\">empty</span> expression, we return <span class=\"RktVal\">'</span><span class=\"RktVal\">null</span> because the empty expression does not match a character. The empty expression only matches the empty string.</p>\n\n<p>For the <span class=\"RktVal\">'</span><span class=\"RktVal\">null</span> expression, we return <span class=\"RktVal\">'</span><span class=\"RktVal\">null</span> because the null expression does not match any strings.</p>\n\n<p>For star expressions, we concatenate the sub-expression&rsquo;s derivative with the star expression. Concatenating the original star expression gives us the repetition behavior.</p>\n\n<p>For sequences, there are two cases. The intuitive case is the first one, <span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"stt\"> </span><span class=\"RktRdr\">,</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"stt\"> </span><span class=\"RktSym\">a</span><span class=\"stt\"> </span><span class=\"RktSym\">c</span><span class=\"RktPn\">)</span><span class=\"stt\"> </span><span class=\"RktRdr\">,</span><span class=\"RktSym\">b</span><span class=\"RktVal\">)</span>. This is the derivative of the first regular expression concatenated with the second expression.\nHowever, if the first regular expression matches the empty string, the derivative of the sequence could also be <span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"stt\"> </span><span class=\"RktSym\">b</span><span class=\"stt\"> </span><span class=\"RktSym\">c</span><span class=\"RktPn\">)</span>. We implement this using our <span class=\"RktSym\">v</span> helper and properties of regular expressions.</p>\n\n<p>If <span class=\"RktPn\">(</span><span class=\"RktSym\">v</span><span class=\"stt\"> </span><span class=\"RktSym\">a</span><span class=\"RktPn\">)</span> returns <span class=\"RktVal\">'</span><span class=\"RktVal\">empty</span>, the second case becomes <span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"stt\"> </span><span class=\"RktVal\">empty</span><span class=\"stt\"> </span><span class=\"RktRdr\">,</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"stt\"> </span><span class=\"RktSym\">b</span><span class=\"stt\"> </span><span class=\"RktSym\">c</span><span class=\"RktPn\">)</span><span class=\"RktVal\">)</span>, which is equivalent to <span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"stt\"> </span><span class=\"RktSym\">b</span><span class=\"stt\"> </span><span class=\"RktSym\">c</span><span class=\"RktPn\">)</span>.\nIf <span class=\"RktPn\">(</span><span class=\"RktSym\">v</span><span class=\"stt\"> </span><span class=\"RktSym\">a</span><span class=\"RktPn\">)</span> is <span class=\"RktVal\">'</span><span class=\"RktVal\">null</span>, we get <span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"stt\"> </span><span class=\"RktVal\">null</span><span class=\"stt\"> </span><span class=\"RktRdr\">,</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"stt\"> </span><span class=\"RktSym\">b</span><span class=\"stt\"> </span><span class=\"RktSym\">c</span><span class=\"RktPn\">)</span><span class=\"RktVal\">)</span>, which is equivalent to <span class=\"RktVal\">'</span><span class=\"RktVal\">null</span>. So we only ever \"try\" the derivative of <span class=\"RktSym\">b</span>\nwhen <span class=\"RktSym\">a</span> matches the empty string.</p>\n\n<p>We want the derivative to match all strings matched by either of these two cases, so we use <span class=\"RktVal\">'</span><span class=\"RktVal\">or</span>.</p>\n\n<p>The other cases are just straightforward recursive cases, threading the derivative through the sub-expressions.</p>\n\n<p>The  first two examples show the simple character cases. The following examples seem complicated, but if we use the properties of regular expressions, we can simplify the results.\nFor example, <span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"stt\"> </span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"stt\"> </span><span class=\"RktVal\">#\\a</span><span class=\"stt\"> </span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"RktPn\">)</span> evaluates to <span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">or</span><span class=\"stt\"> </span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"stt\"> </span><span class=\"RktVal\">empty</span><span class=\"stt\"> </span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"stt\"> </span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"stt\"> </span><span class=\"RktVal\">null</span><span class=\"stt\"> </span><span class=\"RktVal\">null</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span>, which is equivalent to <span class=\"RktVal\">#\\b</span>. Try to simplify the other outputs and make sure the results are what you expect.</p>\n\n<h2>1.1\n <tt>&nbsp;</tt><a name=\"(part._.Detour__.A_.Simplifier)\"></a>Detour: A Simplifier</h2>\n\n<p>If you simplified those by hand, you&rsquo;d probably agree that this is a computer&rsquo;s job. So let&rsquo;s make a function to do it for us!\nThis will make it easier to analyze our derivatives and it&rsquo;s a fun exercise.</p>\n\n<p>We&rsquo;ll start by writing the rewrite rules:</p>\n\n<div class=\"SCodeFlow\">\n <table cellpadding=\"0\" cellspacing=\"0\" class=\"RktBlk\">\n  <tbody>\n   <tr>\n    <td>\n     <table cellpadding=\"0\" cellspacing=\"0\" class=\"RktBlk\">\n      <tbody>\n       <tr>\n        <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktStxLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/define.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._define%29%29\">define</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify-step</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">re</span><span class=\"RktPn\">)</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktStxLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/match.html#%28form._%28%28lib._racket%2Fmatch..rkt%29._match%29%29\">match</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">re</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktStxLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/if.html#%28form._%28%28lib._racket%2Fprivate%2Fletstx-scheme..rkt%29._or%29%29\">or</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">empty</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">null</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">?</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\"><a class=\"RktValLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/characters.html#%28def._%28%28quote._~23~25kernel%29._char~3f%29%29\">char?</a></span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">re</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">null</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">empty</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">empty</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">empty</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">null</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">null</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">null</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">null</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">empty</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">b</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">empty</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">a</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">and</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">null</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">null</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">and</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">null</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">null</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">and</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktPn\">(</span><span class=\"RktSym\">?</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\"><a class=\"RktValLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/characters.html#%28def._%28%28quote._~23~25kernel%29._char~3f%29%29\">char?</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">a</span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktPn\">(</span><span class=\"RktSym\">?</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\"><a class=\"RktValLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/characters.html#%28def._%28%28quote._~23~25kernel%29._char~3f%29%29\">char?</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">b</span><span class=\"RktPn\">)</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktStxLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/if.html#%28form._%28%28quote._~23~25kernel%29._if%29%29\">if</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktValLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/Equality.html#%28def._%28%28quote._~23~25kernel%29._eq~3f%29%29\">eq?</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">b</span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">null</span><span class=\"RktPn\">)</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">and</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">a</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">a</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">or</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">null</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">b</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">or</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">null</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">a</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">or</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">a</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">a</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">not</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">not</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">a</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">a</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktSym\"><a class=\"RktStxLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/stx-patterns.html#%28form._%28%28lib._racket%2Fprivate%2Fstxcase-scheme..rkt%29.__%29%29\">_</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">re</span><span class=\"RktPn\">]</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr></tbody></table></td></tr></tbody></table></div>\n\n<p>These are some simple rewrite rules for simplifying regular expressions. For example, the rule <span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">and</span><span class=\"stt\"> </span><span class=\"RktVal\">null</span><span class=\"stt\"> </span><span class=\"RktRdr\">,</span><span class=\"RktSym\">b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktSym\">~&gt;</span><span class=\"stt\"> </span><span class=\"RktVal\">'</span><span class=\"RktVal\">null</span> makes sense because a string has to match both <span class=\"RktVal\">'</span><span class=\"RktVal\">null</span> and some regular expression <span class=\"RktSym\">b</span>\nto match <span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">and</span><span class=\"stt\"> </span><span class=\"RktVal\">null</span><span class=\"stt\"> </span><span class=\"RktRdr\">,</span><span class=\"RktSym\">b</span><span class=\"RktVal\">)</span>, but it won&rsquo;t match <span class=\"RktVal\">'</span><span class=\"RktVal\">null</span>, so the whole thing is equivalent to <span class=\"RktVal\">'</span><span class=\"RktVal\">null</span>. Make sure all of the rules make sense to you.</p>\n\n<p>Now we&rsquo;ll implement the recursive part:</p>\n\n<div class=\"SCodeFlow\">\n <table cellpadding=\"0\" cellspacing=\"0\" class=\"RktBlk\">\n  <tbody>\n   <tr>\n    <td>\n     <table cellpadding=\"0\" cellspacing=\"0\" class=\"RktBlk\">\n      <tbody>\n       <tr>\n        <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktStxLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/define.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._define%29%29\">define</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify-step*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">re</span><span class=\"RktPn\">)</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktStxLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/let.html#%28form._%28%28lib._racket%2Fprivate%2Fletstx-scheme..rkt%29._let%29%29\">let</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktPn\">[</span><span class=\"RktSym\">re^</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify-step</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">re</span><span class=\"RktPn\">)</span><span class=\"RktPn\">]</span><span class=\"RktPn\">)</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktStxLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/if.html#%28form._%28%28quote._~23~25kernel%29._if%29%29\">if</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktValLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/Equality.html#%28def._%28%28quote._~23~25kernel%29._equal~3f%29%29\">equal?</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">re</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">re^</span><span class=\"RktPn\">)</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktSym\">re^</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify-step*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">re^</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr></tbody></table></td></tr>\n   <tr>\n    <td>\n     <table cellpadding=\"0\" cellspacing=\"0\" class=\"RktBlk\">\n      <tbody>\n       <tr>\n        <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktStxLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/define.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._define%29%29\">define</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">re</span><span class=\"RktPn\">)</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktStxLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/match.html#%28form._%28%28lib._racket%2Fmatch..rkt%29._match%29%29\">match</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">re</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktStxLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/if.html#%28form._%28%28lib._racket%2Fprivate%2Fletstx-scheme..rkt%29._or%29%29\">or</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">empty</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">null</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">?</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\"><a class=\"RktValLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/characters.html#%28def._%28%28quote._~23~25kernel%29._char~3f%29%29\">char?</a></span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">re</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">a</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify-step*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">a</span><span class=\"RktPn\">)</span><span class=\"RktVal\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify-step*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">a</span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">b</span><span class=\"RktPn\">)</span><span class=\"RktVal\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">and</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify-step*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">and</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">a</span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">b</span><span class=\"RktPn\">)</span><span class=\"RktVal\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">or</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify-step*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">or</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">a</span><span class=\"RktPn\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">b</span><span class=\"RktPn\">)</span><span class=\"RktVal\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">not</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktSym\">a</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify-step*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">not</span><span class=\"hspace\">&nbsp;</span><span class=\"RktRdr\">,</span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">a</span><span class=\"RktPn\">)</span><span class=\"RktVal\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn\">]</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr></tbody></table></td></tr></tbody></table></div>\n\n<p><span class=\"RktSym\">simplify-step*</span> repeatedly applies <span class=\"RktSym\">simplify-step</span> until the result is unchanged.\nThis is guaranteed to terminate because our rewrite rules either produce a sub-expression, an atomic expression,\nor the unchanged input expression. Atomic expressions are returned unchanged, so eventually, we&rsquo;ll either produce\nan expression with no rewrite rule (gets returned unchanged) or an atomic and then terminate.</p>\n\n<p><span class=\"RktSym\">simplify</span> simplifies the expression bottom-up, simplifying sub-expressions first and then repeatedly\napplying our rewrite rules on the input expression with simplified children.</p>\n\n<p>This is by no means an exhaustive, rigorous simplifier, but it gets the job done for our purposes.</p>\n\n<p>Finally, we can simplify those derivatives:</p>\n\n<div class=\"SCodeFlow\">\n <table cellpadding=\"0\" cellspacing=\"0\" class=\"RktBlk\">\n  <tbody>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'empty</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'null</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">#\\b</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">`</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\z</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'null</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">or</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\c</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'(or #\\b #\\c)</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">or</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\c</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\z</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'null</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">and</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\c</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'null</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">and</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\c</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\z</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'null</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'(* #\\a)</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'(seq #\\b (* (seq #\\a #\\b)))</span></p></td></tr></tbody></table></div>\n\n<p>Beautiful!</p>\n\n<h1>2\n <tt>&nbsp;</tt><a name=\"(part._.Putting_it_.All_.Together)\"></a>Putting it All Together</h1>\n\n<p>Now that we can differentiate a regular expression with respect to a character, we can differentiate with respect to a string by\nsequencing character derivatives.</p>\n\n<div class=\"SCodeFlow\">\n <table cellpadding=\"0\" cellspacing=\"0\" class=\"RktBlk\">\n  <tbody>\n   <tr>\n    <td>\n     <table cellpadding=\"0\" cellspacing=\"0\" class=\"RktBlk\">\n      <tbody>\n       <tr>\n        <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktStxLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/define.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._define%29%29\">define</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/ds</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">re</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">s</span><span class=\"RktPn\">)</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktStxLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/for.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._for%2Ffold%29%29\">for/fold</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktPn\">[</span><span class=\"RktSym\">re</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">re</span><span class=\"RktPn\">]</span><span class=\"RktPn\">)</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktPn\">[</span><span class=\"RktSym\">c</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktValLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/sequences.html#%28def._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._in-string%29%29\">in-string</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">s</span><span class=\"RktPn\">)</span><span class=\"RktPn\">]</span><span class=\"RktPn\">)</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/dc</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">re</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">c</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr></tbody></table></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/ds</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">\"ab\"</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'empty</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/ds</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\c</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">\"ab\"</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">#\\c</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/ds</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">\"\"</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'(* #\\a)</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/ds</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">\"a\"</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'(* #\\a)</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/ds</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">\"aaaaa\"</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'(* #\\a)</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/ds</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">\"\"</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'(* (seq #\\a #\\b))</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/ds</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">\"a\"</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'(seq #\\b (* (seq #\\a #\\b)))</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/ds</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">\"ab\"</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'(* (seq #\\a #\\b))</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">simplify</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/ds</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">\"ababababa\"</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">'(seq #\\b (* (seq #\\a #\\b)))</span></p></td></tr></tbody></table></div>\n\n<p>With this, we can finally determine if a string matches a regular expression:</p>\n\n<div class=\"SCodeFlow\">\n <table cellpadding=\"0\" cellspacing=\"0\" class=\"RktBlk\">\n  <tbody>\n   <tr>\n    <td>\n     <table cellpadding=\"0\" cellspacing=\"0\" class=\"RktBlk\">\n      <tbody>\n       <tr>\n        <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktStxLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/define.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._define%29%29\">define</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">our-regexp-match</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">re</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">s</span><span class=\"RktPn\">)</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\"><a class=\"RktStxLink Sq\" data-pltdoc=\"x\" href=\"https://docs.racket-lang.org/reference/match.html#%28form._%28%28lib._racket%2Fmatch..rkt%29._match%29%29\">match</a></span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">v</span><span class=\"hspace\">&nbsp;</span><span class=\"RktPn\">(</span><span class=\"RktSym\">d/ds</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">re</span><span class=\"hspace\">&nbsp;</span><span class=\"RktSym\">s</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">'</span><span class=\"RktVal\">empty</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#t</span><span class=\"RktPn\">]</span></td></tr>\n       <tr>\n        <td><span class=\"hspace\">&nbsp;&nbsp;</span><span class=\"hspace\">&nbsp;&nbsp;&nbsp;&nbsp;</span><span class=\"RktPn\">[</span><span class=\"RktVal\">'</span><span class=\"RktVal\">null</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#f</span><span class=\"RktPn\">]</span><span class=\"RktPn\">)</span><span class=\"RktPn\">)</span></td></tr></tbody></table></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">our-regexp-match</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">\"a\"</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">#t</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">our-regexp-match</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">\"b\"</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">#f</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">our-regexp-match</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">\"ab\"</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">#t</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">our-regexp-match</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">\"az\"</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">#f</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">our-regexp-match</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">\"abc\"</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">#f</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">our-regexp-match</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">or</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\c</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">\"ab\"</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">#t</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">our-regexp-match</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">or</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\c</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">\"ac\"</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">#t</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">our-regexp-match</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">or</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\c</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">\"az\"</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">#f</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">our-regexp-match</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">\"\"</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">#t</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">our-regexp-match</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">\"a\"</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">#t</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">our-regexp-match</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">\"aaaaaaaaaa\"</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">#t</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">our-regexp-match</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">\"\"</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">#t</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">our-regexp-match</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">\"a\"</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">#f</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">our-regexp-match</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">\"ab\"</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">#t</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">our-regexp-match</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">\"aba\"</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">#f</span></p></td></tr>\n   <tr>\n    <td><span class=\"stt\">&gt; </span><span class=\"RktPn\">(</span><span class=\"RktSym\">our-regexp-match</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">'</span><span class=\"RktVal\">(</span><span class=\"RktVal\">*</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">(</span><span class=\"RktVal\">seq</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\a</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">#\\b</span><span class=\"RktVal\">)</span><span class=\"RktVal\">)</span><span class=\"hspace\">&nbsp;</span><span class=\"RktVal\">\"abab\"</span><span class=\"RktPn\">)</span></td></tr>\n   <tr>\n    <td>\n     <p><span class=\"RktRes\">#t</span></p></td></tr></tbody></table></div>\n\n<p>This method is cool and simple, but does not generalize well to features like capture groups. Regardless,\nI think it is a very interesting idea and a fun exercise.</p>"))))